When would you want to use a remote repository rather than keeping all your work
local?

    When you want to collaborate with other developers or when you want to be able
to access your project from various locations. It also works well as a backup solution.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because you may be working on a branch that you might not yet feel ready to 
commit to a shared repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used to make a copy of another GitHub user's repository so that
your changes can be made without affecting the original. Clones are used to make
a copy of an accessible repository. Branches are used when changes are intended
to eventually be folded back into the main branch of the project.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can easily compare your changes against the last "official" update.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    By frequently communicating with my collaborators in order to ensure that
everyone is aware of what changes to what files are being made.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    It's probably good practice to always make changes in a branch that can then
be pulled into the master when working on a new feature. One exmaple where you
might want to edit the master directly would be for a very small change, such
as updating the README file.
